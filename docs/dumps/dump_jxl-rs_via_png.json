[{"test_id": "alpha_nonpremultiplied", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/alpha_nonpremultiplied/input.jxl", "/tmp/alpha_nonpremultiplied6ciq0fck/decoded_image.npy", "--metadata_out", "/tmp/alpha_nonpremultiplied6ciq0fck/meta.json", "--icc_out", "/tmp/alpha_nonpremultiplied6ciq0fck/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 0.8162474475033703 > 6.1035e-05", "actual_peak_error": 1.0, "actual_rmses": [0.8162474475033703, 0.5770683094724763, 0.5770683094724763, 0.5770683094724758], "actual_rmse": 0.8162474475033703, "rmse_limit": 6.1035e-05, "peak_error": 6.1035e-05}, "success": false}, {"test_id": "alpha_triangles", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/alpha_triangles/input.jxl", "/tmp/alpha_trianglesq18uqw82/decoded_image.npy", "--metadata_out", "/tmp/alpha_trianglesq18uqw82/meta.json", "--icc_out", "/tmp/alpha_trianglesq18uqw82/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 0.7071067811865476 > 0.001953125", "actual_peak_error": 1.0, "actual_rmses": [0.603976239693672, 0.5776326568851459, 0.6033696024613877, 0.7071067811865476], "actual_rmse": 0.7071067811865476, "rmse_limit": 0.001953125, "peak_error": 0.001953125}, "success": false}, {"test_id": "animation_icos4d_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/animation_icos4d_5/input.jxl", "/tmp/animation_icos4d_54s2e_5x5/decoded_image.npy", "--metadata_out", "/tmp/animation_icos4d_54s2e_5x5/meta.json", "--icc_out", "/tmp/animation_icos4d_54s2e_5x5/decoded.icc", "--norender_spotcolors"], "success": false, "message": "Running the decoder (python3 scripts/wrap_png.py --decoder  third_party/jxl-rs/target/release/jxl_cli %s %s  ./third_party/conformance/testcases/animation_icos4d_5/input.jxl /tmp/animation_icos4d_54s2e_5x5/decoded_image.npy --metadata_out /tmp/animation_icos4d_54s2e_5x5/meta.json --icc_out /tmp/animation_icos4d_54s2e_5x5/decoded.icc --norender_spotcolors) returned error"}, {"test_id": "animation_newtons_cradle", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/animation_newtons_cradle/input.jxl", "/tmp/animation_newtons_cradlewf5h73zh/decoded_image.npy", "--metadata_out", "/tmp/animation_newtons_cradlewf5h73zh/meta.json", "--icc_out", "/tmp/animation_newtons_cradlewf5h73zh/decoded.icc", "--norender_spotcolors"], "success": false, "message": "Running the decoder (python3 scripts/wrap_png.py --decoder  third_party/jxl-rs/target/release/jxl_cli %s %s  ./third_party/conformance/testcases/animation_newtons_cradle/input.jxl /tmp/animation_newtons_cradlewf5h73zh/decoded_image.npy --metadata_out /tmp/animation_newtons_cradlewf5h73zh/meta.json --icc_out /tmp/animation_newtons_cradlewf5h73zh/decoded.icc --norender_spotcolors) returned error"}, {"test_id": "animation_spline_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/animation_spline_5/input.jxl", "/tmp/animation_spline_581up0u58/decoded_image.npy", "--metadata_out", "/tmp/animation_spline_581up0u58/meta.json", "--icc_out", "/tmp/animation_spline_581up0u58/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": false, "message": "Malformed metadata file"}, "num_frames": 60, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 0.04110588891988478 > 0.02", "actual_peak_error": 0.9484766721725464, "actual_rmses": [0.04110588891988478, 0.021106631434047736, 0.02098831678725115], "actual_rmse": 0.04110588891988478, "rmse_limit": 0.02, "peak_error": 0.06}, "frame1_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame2_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame3_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame4_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame5_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame6_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame7_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame8_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame9_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame10_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame11_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame12_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame13_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame14_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame15_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame16_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame17_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame18_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame19_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame20_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame21_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame22_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame23_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame24_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame25_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame26_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame27_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame28_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame29_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame30_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame31_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame32_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame33_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame34_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame35_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame36_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame37_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame38_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame39_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame40_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame41_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame42_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame43_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame44_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame45_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame46_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame47_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame48_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame49_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame50_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame51_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame52_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame53_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame54_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame55_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame56_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame57_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame58_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "frame59_compare_npy": {"success": false, "message": "Frame count does not match: ref (60, 320, 320, 3), decoded (1, 320, 320, 3)"}, "success": false}, {"test_id": "bench_oriented_brg_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/bench_oriented_brg_5/input.jxl", "/tmp/bench_oriented_brg_59mnwnyet/decoded_image.npy", "--metadata_out", "/tmp/bench_oriented_brg_59mnwnyet/meta.json", "--icc_out", "/tmp/bench_oriented_brg_59mnwnyet/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "Expected shape (1, 500, 606, 3) but found (1, 606, 500, 3)"}, "success": false}, {"test_id": "bicycles", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/bicycles/input.jxl", "/tmp/bicycles3_jvgavy/decoded_image.npy", "--metadata_out", "/tmp/bicycles3_jvgavy/meta.json", "--icc_out", "/tmp/bicycles3_jvgavy/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 0.5233321256105203 > 0.000976562", "actual_peak_error": 1.0, "actual_rmses": [0.5233321256105203, 0.5000232575773105, 0.5140640011967693], "actual_rmse": 0.5233321256105203, "rmse_limit": 0.000976562, "peak_error": 0.000976562}, "success": false}, {"test_id": "bike_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/bike_5/input.jxl", "/tmp/bike_5_2yzmp92/decoded_image.npy", "--metadata_out", "/tmp/bike_5_2yzmp92/meta.json", "--icc_out", "/tmp/bike_5_2yzmp92/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "Peak error too large: 0.6710487008094788 > 0.06", "actual_peak_error": 0.6710487008094788, "actual_rmses": [0.006981613001037392, 0.007337334301931121, 0.008591076446260216], "actual_rmse": 0.008591076446260216, "rmse_limit": 0.02, "peak_error": 0.06}, "success": false}, {"test_id": "blendmodes_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/blendmodes_5/input.jxl", "/tmp/blendmodes_5mq8x9jgp/decoded_image.npy", "--metadata_out", "/tmp/blendmodes_5mq8x9jgp/meta.json", "--icc_out", "/tmp/blendmodes_5mq8x9jgp/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 0.909319216723103 > 0.02", "actual_peak_error": 1.0, "actual_rmses": [0.45218345838088003, 0.909319216723103, 0.7194118015043991, 0.692494583662338], "actual_rmse": 0.909319216723103, "rmse_limit": 0.02, "peak_error": 0.06}, "success": false}, {"test_id": "cafe_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/cafe_5/input.jxl", "/tmp/cafe_5z11_o797/decoded_image.npy", "--metadata_out", "/tmp/cafe_5z11_o797/meta.json", "--icc_out", "/tmp/cafe_5z11_o797/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 0.08542672330590187 > 0.02", "actual_peak_error": 1.0, "actual_rmses": [0.07815076187017297, 0.05533216672283946, 0.08542672330590187], "actual_rmse": 0.08542672330590187, "rmse_limit": 0.02, "peak_error": 0.06}, "success": false}, {"test_id": "delta_palette", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/delta_palette/input.jxl", "/tmp/delta_palettei7zpf303/decoded_image.npy", "--metadata_out", "/tmp/delta_palettei7zpf303/meta.json", "--icc_out", "/tmp/delta_palettei7zpf303/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 0.7235599242579385 > 0.000976562", "actual_peak_error": 1.0, "actual_rmses": [0.7235599242579385, 0.37940112156102673, 0.40739990154077427], "actual_rmse": 0.7235599242579385, "rmse_limit": 0.000976562, "peak_error": 0.000976562}, "success": false}, {"test_id": "grayscale_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/grayscale_5/input.jxl", "/tmp/grayscale_5q69t6lfl/decoded_image.npy", "--metadata_out", "/tmp/grayscale_5q69t6lfl/meta.json", "--icc_out", "/tmp/grayscale_5q69t6lfl/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "Expected shape (1, 200, 200, 1) but found (1, 200, 200, 3)"}, "success": false}, {"test_id": "grayscale_jpeg_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/grayscale_jpeg_5/input.jxl", "/tmp/grayscale_jpeg_53regkpwh/decoded_image.npy", "--metadata_out", "/tmp/grayscale_jpeg_53regkpwh/meta.json", "--icc_out", "/tmp/grayscale_jpeg_53regkpwh/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "Expected shape (1, 200, 200, 1) but found (1, 200, 200, 3)"}, "success": false}, {"test_id": "grayscale_public_university", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/grayscale_public_university/input.jxl", "/tmp/grayscale_public_universitygbclwhd4/decoded_image.npy", "--metadata_out", "/tmp/grayscale_public_universitygbclwhd4/meta.json", "--icc_out", "/tmp/grayscale_public_universitygbclwhd4/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "Expected shape (1, 1620, 2880, 1) but found (1, 1620, 2880, 3)"}, "success": false}, {"test_id": "lz77_flower", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/lz77_flower/input.jxl", "/tmp/lz77_flowerefv6yzbs/decoded_image.npy", "--metadata_out", "/tmp/lz77_flowerefv6yzbs/meta.json", "--icc_out", "/tmp/lz77_flowerefv6yzbs/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 0.6859614972938746 > 0.000976562", "actual_peak_error": 1.0, "actual_rmses": [0.6741199814332843, 0.6859614972938746, 0.6150782092691367], "actual_rmse": 0.6859614972938746, "rmse_limit": 0.000976562, "peak_error": 0.000976562}, "success": false}, {"test_id": "noise_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/noise_5/input.jxl", "/tmp/noise_524kpp3g_/decoded_image.npy", "--metadata_out", "/tmp/noise_524kpp3g_/meta.json", "--icc_out", "/tmp/noise_524kpp3g_/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 0.09456969982840739 > 0.02", "actual_peak_error": 0.5118665099143982, "actual_rmses": [0.09456969982840739, 0.0855391461405716, 0.0865867432016397], "actual_rmse": 0.09456969982840739, "rmse_limit": 0.02, "peak_error": 0.06}, "success": false}, {"test_id": "opsin_inverse_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/opsin_inverse_5/input.jxl", "/tmp/opsin_inverse_55g6jt9zz/decoded_image.npy", "--metadata_out", "/tmp/opsin_inverse_55g6jt9zz/meta.json", "--icc_out", "/tmp/opsin_inverse_55g6jt9zz/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": true, "actual_peak_error": 0.01617586612701416, "actual_rmses": [0.002200499537423811, 0.0022864501107586754, 0.002018258736109322], "actual_rmse": 0.0022864501107586754, "rmse_limit": 0.02, "peak_error": 0.06}, "success": true}, {"test_id": "patches_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/patches_5/input.jxl", "/tmp/patches_5quq9pg4z/decoded_image.npy", "--metadata_out", "/tmp/patches_5quq9pg4z/meta.json", "--icc_out", "/tmp/patches_5quq9pg4z/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 1.0 > 0.02", "actual_peak_error": 1.0, "actual_rmses": [0.12592718853388446, 0.13758741870103064, 0.14934357735756185, 1.0], "actual_rmse": 1.0, "rmse_limit": 0.02, "peak_error": 0.06}, "success": false}, {"test_id": "patches_lossless", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/patches_lossless/input.jxl", "/tmp/patches_losslessrj0yrd6z/decoded_image.npy", "--metadata_out", "/tmp/patches_losslessrj0yrd6z/meta.json", "--icc_out", "/tmp/patches_losslessrj0yrd6z/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 1.0 > 0.000976562", "actual_peak_error": 1.0, "actual_rmses": [0.1953790063132369, 0.2067162670122352, 0.22198465624404298, 1.0], "actual_rmse": 1.0, "rmse_limit": 0.000976562, "peak_error": 0.000976562}, "success": false}, {"test_id": "progressive_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/progressive_5/input.jxl", "/tmp/progressive_5w3gfm9ik/decoded_image.npy", "--metadata_out", "/tmp/progressive_5w3gfm9ik/meta.json", "--icc_out", "/tmp/progressive_5w3gfm9ik/decoded.icc", "--norender_spotcolors"], "exact_tests": [], "check_meta": {"success": true}, "num_frames": 1, "frame0_compare_npy": {"success": false, "message": "RMSE too large: 0.3866352318772061 > 0.02", "actual_peak_error": 1.0, "actual_rmses": [0.3866352318772061, 0.2512605545009545, 0.20157125781747817], "actual_rmse": 0.3866352318772061, "rmse_limit": 0.02, "peak_error": 0.06}, "success": false}, {"test_id": "spot", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/spot/input.jxl", "/tmp/spotbeky3fyy/decoded_image.npy", "--metadata_out", "/tmp/spotbeky3fyy/meta.json", "--icc_out", "/tmp/spotbeky3fyy/decoded.icc", "--norender_spotcolors"], "success": false, "message": "Running the decoder (python3 scripts/wrap_png.py --decoder  third_party/jxl-rs/target/release/jxl_cli %s %s  ./third_party/conformance/testcases/spot/input.jxl /tmp/spotbeky3fyy/decoded_image.npy --metadata_out /tmp/spotbeky3fyy/meta.json --icc_out /tmp/spotbeky3fyy/decoded.icc --norender_spotcolors) returned error"}, {"test_id": "sunset_logo", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/sunset_logo/input.jxl", "/tmp/sunset_logo4wzu0f26/decoded_image.npy", "--metadata_out", "/tmp/sunset_logo4wzu0f26/meta.json", "--icc_out", "/tmp/sunset_logo4wzu0f26/decoded.icc", "--norender_spotcolors"], "success": false, "message": "Running the decoder (python3 scripts/wrap_png.py --decoder  third_party/jxl-rs/target/release/jxl_cli %s %s  ./third_party/conformance/testcases/sunset_logo/input.jxl /tmp/sunset_logo4wzu0f26/decoded_image.npy --metadata_out /tmp/sunset_logo4wzu0f26/meta.json --icc_out /tmp/sunset_logo4wzu0f26/decoded.icc --norender_spotcolors) returned error"}, {"test_id": "upsampling_5", "cmd": ["python3", "scripts/wrap_png.py", "--decoder", " third_party/jxl-rs/target/release/jxl_cli %s %s ", "./third_party/conformance/testcases/upsampling_5/input.jxl", "/tmp/upsampling_5223g10hl/decoded_image.npy", "--metadata_out", "/tmp/upsampling_5223g10hl/meta.json", "--icc_out", "/tmp/upsampling_5223g10hl/decoded.icc", "--norender_spotcolors"], "success": false, "message": "Running the decoder (python3 scripts/wrap_png.py --decoder  third_party/jxl-rs/target/release/jxl_cli %s %s  ./third_party/conformance/testcases/upsampling_5/input.jxl /tmp/upsampling_5223g10hl/decoded_image.npy --metadata_out /tmp/upsampling_5223g10hl/meta.json --icc_out /tmp/upsampling_5223g10hl/decoded.icc --norender_spotcolors) returned error"}]